{"version":3,"file":"static/js/954.9efe6f21.chunk.js","mappings":"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","sources":["pages/Project.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { gsap } from \"gsap\";\r\nimport { ScrollTrigger, Observer } from \"gsap/all\";\r\nimport \"../App.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LoadingScreen from './components/LoadingScreen';\r\n\r\nconst Project = () => {\r\n  const sectionsRef = useRef([]);\r\n  const currentIndex = useRef(0);\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const scrollToSection = (index) => {\r\n    const section = sectionsRef.current[index];\r\n    if (!section) return;\r\n\r\n    gsap.to(window, {\r\n      scrollTo: { y: section, autoKill: false },\r\n      duration: 1.2,\r\n      ease: \"power3.out\",\r\n      onComplete: () => {\r\n        currentIndex.current = index;\r\n        setActiveIndex(index);\r\n\r\n        if (index === 0) {\r\n          document.body.classList.remove(\"show-nav\");\r\n        } else {\r\n          document.body.classList.add(\"show-nav\");\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const minLoadingTime = 1000; // Shorter for subsequent pages\r\n    const loadingStartTime = performance.now();\r\n\r\n    const timer = setTimeout(() => {\r\n      setIsLoading(false);\r\n    }, minLoadingTime);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!isLoading) {\r\n      const sections = sectionsRef.current;\r\n\r\n      Observer.create({\r\n        target: window,\r\n        type: \"wheel,touch\",\r\n        onDown: () => currentIndex.current < sections.length - 1 && scrollToSection(currentIndex.current + 1),\r\n        onUp: () => currentIndex.current > 0 && scrollToSection(currentIndex.current - 1),\r\n        wheelSpeed: 1,\r\n        tolerance: 15,\r\n        preventDefault: true,\r\n      });\r\n\r\n      sections.forEach((section, i) => {\r\n        ScrollTrigger.create({\r\n          trigger: section,\r\n          start: \"top center\",\r\n          end: \"bottom center\",\r\n          onEnter: () => {\r\n            setActiveIndex(i);\r\n            currentIndex.current = i;\r\n          },\r\n          onEnterBack: () => {\r\n            setActiveIndex(i);\r\n            currentIndex.current = i;\r\n          },\r\n        });\r\n      });\r\n\r\n      requestAnimationFrame(() => scrollToSection(0));\r\n    }\r\n  }, [isLoading]);\r\n\r\n  if (isLoading) return <LoadingScreen />;\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"dot-nav\">\r\n        {[0, 1, 2, 3, 4, 5].map((i) => (\r\n          <div\r\n            key={i}\r\n            className={`dot ${activeIndex === i ? \"active\" : \"\"}`}\r\n            onClick={() => scrollToSection(i)}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"title-frame\" ref={(el) => (sectionsRef.current[0] = el)}>\r\n        <div className=\"title-deco\">\r\n          <img \r\n          src={process.env.PUBLIC_URL + \"/title.svg\"} \r\n          className=\"title-img\"\r\n          alt=\"Title Decoration\"\r\n          ></img>\r\n          <h1>\r\n            THE SEA ABOVE: <br />\r\n            The Project\r\n          </h1>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"frame\" ref={(el) => (sectionsRef.current[1] = el)}>\r\n        <h1>Where Our Information Comes From</h1>\r\n        <div className=\"text-frame\">\r\n          <p>\r\n            To create the visualizations on this page, we brought together and\r\n            cleaned up data from two main sources. These datasets provide\r\n            information about satellites and space debris currently orbiting\r\n            Earth.\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"frame2\" ref={(el) => (sectionsRef.current[2] = el)}>\r\n        <h1>Space Decay Dataset</h1>\r\n        <div className=\"text-frame\">\r\n          <p>\r\n            This dataset comes from space-track.org, a trusted source for\r\n            tracking objects in space. It includes data on active satellites,\r\n            inactive ones, and space debris. The Space Decay dataset was\r\n            collected by KANDHAL KHANDEKA using the public API provided by\r\n            space-track.org. It contains a broad range of information about\r\n            objects currently in orbit, including their names, types, and launch\r\n            years. Originally, the dataset was designed for exploratory data\r\n            analysis (EDA), making it well-suited for identifying patterns and\r\n            trends in orbital activity.\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"frame\" ref={(el) => (sectionsRef.current[3] = el)}>\r\n        <h1>Neuraspace's Space Objects</h1>\r\n        <div className=\"text-frame\">\r\n          <p>\r\n            This is an internal dataset from Neuraspace, a company focused on\r\n            satellite collision prevention. It provides detailed, structured\r\n            information about space objects, including their purpose,\r\n            operational status, and technical specs. The dataset from Neuraspace\r\n            offers detailed and structured information about each space object.\r\n            It includes official names and unique identifiers, along with\r\n            classifications by type and subtype. Additionally, it records the\r\n            country of origin and indicates whether each object is still active.\r\n            This data is designed for long-term use in space traffic management,\r\n            helping to monitor and coordinate objects in orbit more effectively.\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"frame2\" ref={(el) => (sectionsRef.current[4] = el)}>\r\n        <h1>How We Processed the Data</h1>\r\n        <div className=\"text-frame\">\r\n          <p>\r\n            To make the information easier to work with and visualize, both\r\n            datasets were carefully merged into a single, unified structure.\r\n            During this process, duplicate entries were identified and removed\r\n            by cross-referencing the two sources. The data was then cleaned and\r\n            standardized by organizing it into seven core categories: name,\r\n            launch year, type (such as satellite or debris), subtype (like\r\n            payload or rocket body), country of origin, an identifier (using the\r\n            COSPAR ID), and finally, the source of the data â€” whether it came\r\n            from Space Decay or Neuraspace.\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"frame\" ref={(el) => (sectionsRef.current[5] = el)}>\r\n        <h1>Why It Matters</h1>\r\n        <div className=\"text-frame\">\r\n          <p>\r\n            Combining and cleaning these datasets helps paint a more complete\r\n            and accurate picture of what's happening in Earth's orbit. The\r\n            better we understand what's up there, the better we can protect\r\n            satellites, avoid collisions, and keep space safe.\r\n          </p>\r\n          <Link className=\"buttons\" Link to=\"/timeline\">See Visualization</Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n"],"names":["Project","sectionsRef","useRef","currentIndex","activeIndex","setActiveIndex","useState","isLoading","setIsLoading","scrollToSection","index","section","current","gsap","to","window","scrollTo","y","autoKill","duration","ease","onComplete","document","body","classList","remove","add","useEffect","performance","now","timer","setTimeout","clearTimeout","sections","Observer","create","target","type","onDown","length","onUp","wheelSpeed","tolerance","preventDefault","forEach","i","ScrollTrigger","trigger","start","end","onEnter","onEnterBack","requestAnimationFrame","_jsx","LoadingScreen","_jsxs","className","children","map","onClick","ref","el","src","process","alt","Link"],"sourceRoot":""}